{
  "service": {
    "service": "aws-okta-tokensvc-v2",
    "serviceObject": {
      "name": "aws-okta-tokensvc-v2"
    },
    "provider": {
      "stage": "prod",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "go1.x",
      "role": "lambdaRole",
      "region": "us-west-2",
      "memorySize": 512,
      "timeout": 30,
      "stackTags": {
        "Name": "aws-okta-tokensvc-v2"
      },
      "environment": {
        "LDAP_LAMBDA": "cloud-api-ldap-prod-listCloudGroups"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AwsOktaTokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prod-aws-okta-tokensvc-v2"
            }
          },
          "AwsOktaTokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-okta-tokensvc-v2/prod/1584736216975-2020-03-20T20:30:16.975Z/aws-okta-tokensvc-v2.zip"
              },
              "FunctionName": "prod-aws-okta-tokensvc-v2",
              "Handler": "bin/main",
              "MemorySize": 512,
              "Role": {
                "Fn::GetAtt": [
                  "lambdaRole",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "LDAP_LAMBDA": "cloud-api-ldap-prod-listCloudGroups"
                }
              }
            },
            "DependsOn": [
              "AwsOktaTokenLogGroup",
              "lambdaRole"
            ]
          },
          "AwsOktaTokenLambdaVersionCQnwRdFG28F1tB5pZX0iII2LYuzLx31k3uSkhIemodM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AwsOktaTokenLambdaFunction"
              },
              "CodeSha256": "rOYX2u0MS/mbm+St56PhpsbVuoyEtPw/O/pxtCkNVm0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-aws-okta-tokensvc-v2",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceV2": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "v2",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV2Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV2"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AwsOktaTokenLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1584736211327": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodV2Post"
            ]
          },
          "AwsOktaTokenLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "AwsOktaTokenLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "lambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "fff000-aws-okta-tokensvc",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                "arn:aws:iam::028824555316:policy/appteam/fff000-iam-prod-iepc-team01-TeamManagedPolicy-A9UGTL4DY0OG"
              ],
              "Policies": [
                {
                  "PolicyName": "prod-aws-okta-tokensvc-v2-sts-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sts:*"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "AwsOktaTokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AwsOktaTokenLambdaVersionCQnwRdFG28F1tB5pZX0iII2LYuzLx31k3uSkhIemodM"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "customDomain": {
        "domainName": "tokensvc.cloud.vip.nordstrom.com",
        "basePath": "v2",
        "stage": "prod",
        "hostedZoneId": "Z2FDTNDATAQYW2",
        "certificateArn": "arn:aws:acm:us-east-1:028824555316:certificate/2b85c9b9-fc37-4dbc-9782-c2fcded761a1",
        "createRoute53Record": true,
        "endpointType": "edge",
        "securityPolicy": "tls_1"
      }
    },
    "plugins": [
      "serverless-domain-manager"
    ],
    "pluginsData": {},
    "functions": {
      "awsOktaToken": {
        "name": "prod-aws-okta-tokensvc-v2",
        "handler": "bin/main",
        "events": [
          {
            "http": {
              "path": "v2",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 512,
        "timeout": 30,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "AwsOktaTokenLambdaVersionCQnwRdFG28F1tB5pZX0iII2LYuzLx31k3uSkhIemodM"
      }
    },
    "resources": {
      "Resources": {
        "lambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "fff000-aws-okta-tokensvc",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
              "arn:aws:iam::028824555316:policy/appteam/fff000-iam-prod-iepc-team01-TeamManagedPolicy-A9UGTL4DY0OG"
            ],
            "Policies": [
              {
                "PolicyName": "prod-aws-okta-tokensvc-v2-sts-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sts:*"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/Users/e41p/dev_root/golang/src/gitlab.nordstrom.com/public-cloud/aws-okta-token-service-new/.serverless/aws-okta-tokensvc-v2.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-okta-tokensvc-v2/prod/1584736216975-2020-03-20T20:30:16.975Z",
    "artifact": "aws-okta-tokensvc-v2.zip"
  }
}